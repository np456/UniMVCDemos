@model Assignment_2.Models.unit

@{
    ViewBag.Title = "Create";
}


<h2>Create</h2>


@* @using (Html.BeginForm())    *@
@using (Html.BeginForm("Create", "units", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>unit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.unit_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.unit_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.unit_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unit_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.unit_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.unit_title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unit_coordinator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.unit_coordinator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.unit_coordinator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.unit_outline_pdf_document, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @*  @Html.EditorFor(model => model.unit_outline_pdf_document, new { htmlAttributes = new { @class = "form-control" } })   *@
                @Html.ValidationMessageFor(model => model.unit_outline_pdf_document, "", new { @class = "text-danger" })
                <input type="file" accept=".pdf" id="pdf" name="pdf" />    <!-- add file upload control-->
                <div class="text-danger">
                    @ViewBag.FileInvalid
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
